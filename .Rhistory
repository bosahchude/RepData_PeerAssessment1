library(XML)
doc <- htmlTreeParse("06707.html", useInternalNodes = FALSE)
rootNode <- xmlRoot(doc)
questionBody <- rootNode[[2]][[1]][[2]][[2]][[1]][[1]][[1]]
questionBody
rootNode[[2]][[1]][[2]][[2]][[1]][[1]]
doc <- htmlTreeParse("02423.html", useInternalNodes = FALSE)
rootNode <- xmlRoot(doc)
rootNode[[2]][[1]][[2]][[2]][[1]][[1]][[1]]
rootNode[[2]][[1]][[2]][[2]][[1]][[1]]
rootNode[[2]][[1]][[1]][[2]][[1]][[1]][[1]]
rootNode[[2]][[1]][[1]][[2]][[1]][[1]]
rootNode[[2]][[1]][[3]][[1]][[2]][[5]][[1]][[2]]
?gsub
grep("[.]{1}", "How do [w]e go there", value = TRUE)
grep("[.]", "How do [w]e go there", value = TRUE)
grep("[.]", "How do [w]e go there")
grep("How", "How do [w]e go there")
grep("How", "How do [w]e go there", value = T)
gsub("How", "" , "How do [w]e go there")
gsub("How", "\\1" , "How do [w]e go there")
gsub(".*[", "\\1" , "How do [w]e go there")
gsub(".*\[", "\\1" , "How do [w]e go there")
gsub(".*\\[", "\\1" , "How do [w]e go there")
gsub(".*\\[(.*)\\]", "\\1" , "How do [w]e go there")
gsub(".*\\[(.*)]", "\\1" , "How do [w]e go there")
gsub(".*\\[(.*)\\].*", "\\1" , "How do [w]e go there")
gsub(".*\\[(.*)\\].*", "\\1" , "How do [w]e go there")
gsub(".*\\[(.*)\\].*", "" , "How do [w]e go there")
gsub(".*\\[(.*)\\].*", "\\1" , "How do [w]e go there")
gsub(".*\\](.*)", "\\1" , "How do [w]e go there")
gsub(".*\\](.*)", "\\1" , "")
htmlString <- gsub("<br.*?>", "\r\n", "Can we go <br > where our mates are <br/> please sit")
gsub("<br.*?>", "\r\n", "Can we go <br > where <a>our</a> mates are <br/> please sit")
help(package = "dpylr")
library(dpylr)
help(package = "dplyr")
pbeta(c(0.4,0.5,0.6), 2, 1)
?pbeta
install.packages("UsingR")
help(package = UsingR)
library(UsingR)
data(galton)
par(mfrow = c(1,2))
hist(galton$child, col="blue", breaks = 100)
hist(galton$parent, col="blue", breaks = 100)
hist(galton$parent, col="blue")
hist(galton$child, col="blue")
mean(galton$child)
mean(galton$parent)
median(galton$parent)
median(galton$child)
?galton
?cor
y <- galton$child
x <- galton$parent
cor(y,x)
cor(x,y)
?sd
var(x)
sd(x)
sqrt(var(x))
beta1 <- cor(y,x) * sd(y)/sd(x)
beta0 <- mean(y) - beta1 * mean(x)
?coef
coef(lm(y ~ x))
coef(lm(x ~ y))
coef(lm(y ~ x))
plot(lm(y ~ x))
abline(lm(y ~ x))
plot(abline(lm(y ~ x)))
plot(x,y)
par(mfrow = c(1,1))
plot(x,y)
abline(lm(x ~ y))
?manipulate
library(manipulate)
?manipulate
library(swirl)
swirl()
install_from_swirl("Regression Models")
install_from_swirl("R Programming")
install_from_swirl("Open Intro")
install_from_swirl("Mathematical Biostatistics Boot Camp")
install_from_swirl("Data Analysis")
?qunif
(1*0.1)+(2*0.2)+(3*0.3)+(4*0.4)
0.75*0.30 + 0.25*70
0.75*0.30 + 0.25*0.70
0.75*0.30/0.4
0.75*0.30/(0.4 * 0.70 + 0.75*0.30)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(w(x - 0.1471)^2)
sum(w * (x - 0.1471)^2)
sum(w * (x - 1.077)^2)
sum(w * (x - 0.3)^2)
sum(w * (x - 0.0025)^2)
coef(lm(x ~ y))
coef(lm(x ~ w))
coef(lm(w ~ x))
?I
coef(lm(I(w - mean(w)) ~ I(x - mean(x)))
coef(lm(I(w - mean(w)) ~ I(x - mean(x))))
coef(lm(I(w - mean(w)) ~ I(x - mean(x)) -1))
coef(lm(I(x - mean(x)) ~ I(w - mean(w)) -1))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(x ~ y))
coef(lm(y ~ x))
data(mtcars)
View(mtcars)
coef(lm(mtcars$mpg ~ mtcars$wt))
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
var(x)
y <- x - mean(x)
y
var(y)
var(2 * y)
var(1.3 * y)
?lm
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(x ~ y))
coef(lm(y ~ x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
sd(x)
var(x)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y ~ x - 1))
coef(lm(x ~ y - 1))
library(swirl)
swirl()
plot(child ~ parent, galton)
plot(jitter(child, 4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col="red")
summary(regrline)
q()
library(swirl)
swirl()
fit <- lm(child ~ parent, data = galton)
summary(fit$residuals)
info()
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
play()
str(fit)
fit$coefficients
fit$coefficients[1]
nxt()
ols.ic <- fit$coefficients[1]
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(slope = ols.slope, intercept = ols.ic))
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, (varRes + varEst))
all.equal(varChild, varRes + varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
play()
??equal
identical(0, mean(efit$residuals))
nxt()
play()
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$accel)
nxt()
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- lm(gch_nor, gpa_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
?cor
library(swirl)
swirl()
fit <- lm(child ~ parent, data = galton)
fit <- lm(child ~ parent, galton)
sqrt(sum(fit$residuals^2)/(n -2))
summary(fit)$sigma
deviance(fit)/(n-2)
sqrt(deviance(fit)/(n-2))
mu <- galton$child
mu <- mean(galton$child)
sTot <- sum((galton$child - mu)^2)
sRes <- deviance(fit)
1 - sRes/sTot
summary(fit)$r.squared
cor(galton$child, galton$parent)^2
?I
summary(cars)
x <- 3
x <- c(3,4,4,4,5,6,)
x <- c(3,4,4,4,5,6,8)
x <- c(0.18, -1.54, 0.42, 0.95)
mean(x)
w <- c(2, 1, 3, 1)
for(n in 1:3) {
w[n]*(x(n) - 0.005)^2
}
for(n in 1:3) {
w[n]*(x[n] - 0.005)^2
}
?for
for(n in 1:3) {
z <-  w[n]*(x[n] - 0.005)^2
print(z)
}
for(n in 1:3) {
z <-  w[n]*(x[n] - 0.0025)^2
print(z)
}
i <- 0
ans <- 0.0025
for(n in 1:3) {
z <-  w[n]*(x[n] - ans)^2
i <- z + i
}
i
i <- 0
ans <- 0.1471
for(n in 1:3) {
z <-  w[n]*(x[n] - ans)^2
i <- z + i
}
i
i <- 0
ans <- 1.0077
for(n in 1:3) {
z <-  w[n]*(x[n] - ans)^2
i <- z + i
}
i
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(x ~ y - 1))
coef(lm(y ~ x - 1))
View(data(mtcars))
View(mtcars)
coef(lm(mpg ~ wt, data = mtcars))
?mtcars
0.4*1.5
1.5/0.4
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
sdx <- sd(x)
meanx <- mean(x)
(x - meanx)/sdx
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y ~ x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(x ~ y))
coef(lm(y ~ x))
-1.712846/-0.04461609
var(x)/var(y)
var(y)/var(x)
cor(x,y)
cor(y,x)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
i <- 0
ans <- 0.1471
for(n in 1:3) {
z <-  w[n]*(x[n] - ans)^2
i <- z + i
}
i
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
i <- 0
ans <- 1.077
for(n in 1:3) {
z <-  w[n]*(x[n] - ans)^2
i <- z + i
}
i
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
i <- 0
ans <- 0.300
for(n in 1:3) {
z <-  w[n]*(x[n] - ans)^2
i <- z + i
}
i
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
i <- 0
ans <- 0.0025
for(n in 1:3) {
z <-  w[n]*(x[n] - ans)^2
i <- z + i
}
i
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
i <- 0
ans <- 0.0000000006
for(n in 1:3) {
z <-  w[n]*(x[n] - ans)^2
i <- z + i
}
i
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x -1)
lm(y ~ x)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(x ~ y))
coef(lm(y ~ x))
library(lubridate)
library(dplyr)
activityData <- read.csv("activity.csv", stringsAsFactors = FALSE)
library(lubridate)
activityData$date <- ymd(activityData$date)
setwd("C:\\Users\\Bosah Chude\\Documents\\GitHub\\RepData_PeerAssessment1")
activityData <- read.csv("activity.csv", stringsAsFactors = FALSE)
library(lubridate)
activityData$date <- ymd(activityData$date)
sanogo <- mutate(activityData, week = weekdays(date))
table(sanogo$week)
mutatedActivityData <- mutate(activityData, week = weekdays(date))
head(mutatedActivityData)
weekendActivityData <- filter(mutatedActivityData, week == "Saturday" || "Sunday" )
?filter
weekendActivityData <- filter(mutatedActivityData, week == "Saturday|Sunday" )
weekendActivityData <- filter(mutatedActivityData, week == "Saturday"|"Sunday" )
weekendActivityData <- filter(mutatedActivityData, week == "Saturday" or "Sunday" )
weekendActivityData <- filter(mutatedActivityData, week == "Saturday" | "Sunday" )
?>
?">"
weekendActivityData <- filter(mutatedActivityData, week == "Saturday" | week == "Sunday" )
View(weekendActivityData)
weekdayActivityData <- filter(mutatedActivityData, week != "Saturday" | week != "Sunday" )
weekdayActivityData <- filter(mutatedActivityData, week != "Saturday" & week != "Sunday" )
library(reshape2)
weekdayActivityData <- melt(weekdayActivityData, id = date)
weekdayActivityData <- melt(weekdayActivityData)
ggplot(data = weekdayActivityData, aes(x = date, y = interval)) + geom_line()
library(ggplot2)
library(ggplot2)
ggplot(data = weekdayActivityData, aes(x = date, y = interval)) + geom_line()
head(weekdayActivityData)
weekendActivityData <- filter(mutatedActivityData, week == "Saturday" | week == "Sunday" )
weekdayActivityData <- filter(mutatedActivityData, week != "Saturday" & week != "Sunday" )
ggplot(data = weekdayActivityData, aes(x = date, y = interval)) + geom_line()
weekdaySummary <- tapply(weekdayActivityData$steps,
weekdayActivityData$interval, mean, na.rm = FALSE)
weekendSummary <- tapply(weekendActivityData$steps,
weekendActivityData$interval, mean, na.rm = FALSE)
weekdaySummary <- tapply(weekdayActivityData$steps,
weekdayActivityData$interval, mean, na.rm = TRUE)
weekendSummary <- tapply(weekendActivityData$steps,
weekendActivityData$interval, mean, na.rm = TRUE)
weekdaySummary
?expand.grid
?data.frame
View(weekendSummary)
ggplot(data = weekendSummary, aes(y = x)) + geom_line()
weekdayDF <- as.data.frame.array(weekdaySummary)
weekdayDF <- as.data.frame(weekdaySummary, names(weekdaySummary))
weekdayDF <- as.data.frame(names(weekdaySummary), weekdaySummary)
weekdayDF <- as.data.frame.array(weekdaySummary)
ggplot(data = weekdayActivityData, aes(x = date, y = interval)) + geom_line()
View(weekdayDF)
colnames(weekdayDF) <- "steps"
View(weekdayDF)
ggplot(data = weekdayDF, aes(y = steps)) + geom_line()
ggplot(data = weekdayDF, aes(x = names(), y = steps)) + geom_line()
ggplot(data = weekdayDF, aes(x = names(weekdayDF), y = steps)) + geom_line()
weekdayDF <- mutate(weekdayDF, interval <- as.numeric(names(weekdayDF)))
weekdayDF <- mutate(weekdayDF, interval = as.numeric(names(weekdayDF)))
View(weekdayDF)
as.numeric)("56")
as.numeric("56")
weekdayDF <- as.data.frame.array(weekdaySummary)
colnames(weekdayDF) <- "steps"
weekdayDF <- mutate(weekdayDF, interval = names(weekdayDF))
View(weekdayDF)
weekdaySummary
View(weekdaySummary)
weekdayDF <- as.data.frame.array(weekdaySummary)
colnames(weekdayDF) <- "steps"
weekdayDF <- mutate(weekdayDF, interval = row.names(weekdayDF))
View(weekdayDF)
weekdayDF <- as.data.frame.array(weekdaySummary)
colnames(weekdayDF) <- "steps"
weekdayDF <- mutate(weekdayDF, interval = as.numeric(row.names(weekdayDF)))
ggplot(data = weekdayDF, aes(x = interval, y = steps)) + geom_line()
ggplot(data = weekdayDF, aes(x = interval, y = steps, color = "Red")) + geom_line()
ggplot(data = weekdayDF, aes(x = interval, y = steps, color = "Blue")) + geom_line()
ggplot(data = weekdayDF, aes(x = interval, y = steps)) + geom_line()
weekdaySummary <- tapply(weekdayActivityData$steps,
weekdayActivityData$interval, mean, na.rm = TRUE)
weekdayDF <- as.data.frame.array(weekdaySummary)
colnames(weekdayDF) <- "steps"
weekdayDF <- mutate(weekdayDF, interval = as.numeric(row.names(weekdayDF)))
weekendSummary <- tapply(weekendActivityData$steps,
weekendActivityData$interval, mean, na.rm = TRUE)
weekendDF <- as.data.frame.array(weekendSummary)
colnames(weekendDF) <- "steps"
weekendDF <- mutate(weekendDF, interval = as.numeric(row.names(weekendDF)))
par(mfrow = c(2,1), mar = c(2,2,2,2))
ggplot(data = weekdayDF, aes(x = interval, y = steps)) + geom_line()
ggplot(data = weekendDF, aes(x = interval, y = steps)) + geom_line()
?par
meanActivityData <- tapply(activityData$steps, activityData$interval, mean, na.rm = TRUE)
meanDF <- as.data.frame.array(meanActivityData)
colnames(meanDF) <- "steps"
meanDF <- mutate(meanDF, interval = as.numeric(row.names(meanDF)))
ggplot(data = meanDF, aes(x = interval, y = steps)) + geom_line()
library(dplry)
library(dplyr)
View(weekendDF)
?opts
?multiplot
help(package = gridExtra)
install.packages(gridExtra)
install.packages("gridExtra")
library(grid)
